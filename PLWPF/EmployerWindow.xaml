<Window x:Class="PLWPF.EmployerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:local="clr-namespace:PLWPF"
        mc:Ignorable="d"
        Title="Employers" Height="520" Width="500" WindowStartupLocation="CenterScreen"  Icon="images/icon.png">
    <Window.Resources>
        <local:StringToImageSourceConverter x:Key="stringToImageSourceConverter" />
        <local:flipBoolean x:Key="flipboolean" />
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="496*"/>
            <RowDefinition Height="40*"/>
        </Grid.RowDefinitions>
        <Grid  Grid.Row="0" Background="{DynamicResource radioBootonHeaderColor}" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <RadioButton x:Name="addRadioButton" Content="{DynamicResource addString}"   Grid.Column="{DynamicResource addColnm}" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="True" Checked="addRadioButton_Checked"/>
            <RadioButton x:Name="updateRadioButton" Content="{DynamicResource updateString}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Checked="updateRadioButton_Checked"  />
            <RadioButton x:Name="removeRadioButton" Content="{DynamicResource removeString}" Grid.Column="{DynamicResource removeColnm}" VerticalAlignment="Center" HorizontalAlignment="Center" Checked="removeRadioButton_Checked" />
        </Grid>
        <Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="addbutton" Grid.Column="{DynamicResource addColnm}" Content="{DynamicResource addString}" Click="addbutton_Click" Background="{DynamicResource radioBootonHeaderColor}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Button.IsEnabled" Value="false"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsChecked, ElementName=addRadioButton}" Value="True"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=employersIDTextBox}" Value="false"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=phoneNumTextBox}" Value="false"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=establishmentDateDatePicker}" Value="false"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=numOfEmployeesTextBox}" Value="false"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=numOfEmployeesNeededTextBox}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="true"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=Text, ElementName=firstNameTextBox}" Value=""/>
                                    <Condition Binding="{Binding Path=IsChecked, ElementName=freelancerRadioButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=Text, ElementName=lastNameTextBox}" Value=""/>
                                    <Condition Binding="{Binding Path=IsChecked, ElementName=freelancerRadioButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=Text, ElementName=companyNameTextBox}" Value=""/>
                                    <Condition Binding="{Binding Path=IsChecked, ElementName=freelancerRadioButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, ElementName=emailTextBox}" Value="">
                                <Setter Property="Button.IsEnabled" Value="false"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, ElementName=addressTextBox}" Value="">
                                <Setter Property="Button.IsEnabled" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="updatebutton" Grid.Column="1" Content="{DynamicResource updateString}" Click="updatebutton_Click"  Background="{DynamicResource radioBootonHeaderColor}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Button.IsEnabled" Value="false"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsChecked, ElementName=updateRadioButton}" Value="True"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=employersIDTextBox}" Value="false"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=phoneNumTextBox}" Value="false"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=establishmentDateDatePicker}" Value="false"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=numOfEmployeesTextBox}" Value="false"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=numOfEmployeesNeededTextBox}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="true"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=Text, ElementName=firstNameTextBox}" Value=""/>
                                    <Condition Binding="{Binding Path=IsChecked, ElementName=freelancerRadioButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=Text, ElementName=lastNameTextBox}" Value=""/>
                                    <Condition Binding="{Binding Path=IsChecked, ElementName=freelancerRadioButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=Text, ElementName=companyNameTextBox}" Value=""/>
                                    <Condition Binding="{Binding Path=IsChecked, ElementName=freelancerRadioButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, ElementName=emailTextBox}" Value="">
                                <Setter Property="Button.IsEnabled" Value="false"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, ElementName=addressTextBox}" Value="">
                                <Setter Property="Button.IsEnabled" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="removebutton" Grid.Column="{DynamicResource removeColnm}" Content="{DynamicResource removeString}" Click="removebutton_Click" Background="{DynamicResource radioBootonHeaderColor}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Button.IsEnabled" Value="false"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                <Setter Property="Button.IsEnabled" Value="true"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <StackPanel x:Name="list"  Grid.Row="1" Background="{DynamicResource categoryBackground}" >
            <ComboBox x:Name="listOfEmploersComboBox" SelectionChanged="listOfEmploers_SelectionChanged" IsSynchronizedWithCurrentItem="True">
                <ComboBox.Background>
                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FF317FB6" Offset="0"/>
                        <GradientStop Color="#FFA8D5DC" Offset="1"/>
                    </LinearGradientBrush>
                </ComboBox.Background>
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=updateRadioButton}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <Grid  Grid.Row="1"  Height="354" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{DynamicResource employerMainGridcolnm0}"/>
                    <ColumnDefinition Width="{DynamicResource employerMainGridcolnm1}"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="{DynamicResource labelColnm}" Margin="0,0,0,-43" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*"/>
                        <RowDefinition Height="41*"/>
                    </Grid.RowDefinitions>
                    <Grid  Grid.Row="0" Margin="0,0,0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <RadioButton x:Name="freelancerRadioButton" Content="{DynamicResource employerFreelancerString}" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding Path= freelancer}" >
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsChecked, ElementName=updateRadioButton}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                        <RadioButton x:Name="companyRadioButton" Content="{DynamicResource employerCompanyString}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" IsChecked="{Binding  Path= isCompany}">
                            <RadioButton.Style>
                                <Style TargetType="{x:Type RadioButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsChecked, ElementName=updateRadioButton}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </RadioButton.Style>
                        </RadioButton>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{StaticResource colnm0}"/>
                            <ColumnDefinition Width="{StaticResource colnm1}"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="{DynamicResource labelColnm}">

                            <Label x:Name="employer_ID" Content="{DynamicResource employerIDString}" Style="{StaticResource LabelAlinment}"/>
                            <Label x:Name="firstName" Content="{DynamicResource employerFirstNameString}">
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}"  BasedOn="{StaticResource LabelAlinment}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=companyRadioButton}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Label x:Name="lastName" Content="{DynamicResource employerLastNameString}">
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}"  BasedOn="{StaticResource LabelAlinment}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=companyRadioButton}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Label x:Name="companyName" Content="{DynamicResource employerCompanyNameString}">
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}"  BasedOn="{StaticResource LabelAlinment}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=freelancerRadioButton}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Label x:Name="phoneNumber" Content="{DynamicResource employerPhoneString}" Style="{StaticResource LabelAlinment}"/>
                            <Label x:Name="email_address" Content="{DynamicResource employerEmailString}" Style="{StaticResource LabelAlinment}"/>
                            <Label x:Name="area_in_country" Content="{DynamicResource employerAreaString}" Style="{StaticResource LabelAlinment}"/>
                            <Label x:Name="Employeraddress" Content="{DynamicResource employerAddressString}" Style="{StaticResource LabelAlinment}"/>
                            <Label x:Name="birth" Content="{DynamicResource employerBirthString}" Style="{StaticResource LabelAlinment}"/>
                            <Label x:Name="Companyfield" Content="{DynamicResource employerFieldString}" Style="{StaticResource LabelAlinment}"/>
                            <Label x:Name="statusOfemployer" Content="{DynamicResource employerStatusString}">
                                <Label.Style>
                                    <Style TargetType="{x:Type Label}"  BasedOn="{StaticResource LabelAlinment}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=companyRadioButton}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Label.Style>
                            </Label>
                            <Label x:Name="numberOfEmployees" Content="{DynamicResource employerNumofEmployeesString}" Style="{StaticResource LabelAlinment}"/>
                            <Label x:Name="numberOfEmployeesNeeded" Content="{DynamicResource employerNumofEmployeesNeededString}" Style="{StaticResource LabelAlinment}"/>
                        </StackPanel>
                        <StackPanel Grid.Column="{DynamicResource inputColnm}">
                            <TextBox x:Name="employersIDTextBox" Height="26" TextWrapping="Wrap" Text="{Binding ID, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, UpdateSourceTrigger=PropertyChanged}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=updateRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="firstNameTextBox" Height="26" TextWrapping="Wrap" Text="{Binding firstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=companyRadioButton}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="lastNameTextBox" Height="26" TextWrapping="Wrap" Text="{Binding familyName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=companyRadioButton}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="companyNameTextBox" Height="26" TextWrapping="Wrap" Text="{Binding companyName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=freelancerRadioButton}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="phoneNumTextBox" Height="26" TextWrapping="Wrap" >
                                <Binding Path="phoneNum" ValidatesOnExceptions="true" Mode="TwoWay" ValidatesOnDataErrors="True" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <local:DemoValidator/>
                                    </Binding.ValidationRules>
                                </Binding>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="emailTextBox" Height="26" TextWrapping="Wrap" Text="{Binding EmailAddress, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <ComboBox x:Name="areaComboBox" Height="26" SelectedItem="{Binding area}" IsSynchronizedWithCurrentItem="True">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <TextBox x:Name="addressTextBox" Height="26" TextWrapping="Wrap" Text="{Binding address, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <DatePicker x:Name="establishmentDateDatePicker"  SelectedDate="{Binding birth, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Height="26" Background="#7FFFAB19">
                                <DatePicker.Style>
                                    <Style TargetType="{x:Type DatePicker}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DatePicker.Style>
                            </DatePicker>
                            <ComboBox x:Name="fieldComboBox" Height="26" SelectedItem="{Binding field1,Mode=TwoWay}" IsSynchronizedWithCurrentItem="True">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <ComboBox x:Name="statusComboBox" Height="26" SelectedItem="{Binding status,Mode=TwoWay}" IsSynchronizedWithCurrentItem="True">
                                <ComboBox.Style>
                                    <Style TargetType="{x:Type ComboBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=companyRadioButton}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                            </ComboBox>
                            <TextBox x:Name="numOfEmployeesTextBox" Height="26" TextWrapping="Wrap" Validation.Error="TextBox_Error">
                                <Binding Path="NumOfEmployees" Mode="TwoWay"  ValidatesOnExceptions="true" ValidatesOnDataErrors="True" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <local:DemoValidator/>
                                    </Binding.ValidationRules>
                                </Binding>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <TextBox x:Name="numOfEmployeesNeededTextBox" Height="26" TextWrapping="Wrap" Validation.Error="TextBox_Error">
                                <Binding Path="NumOfEmployeesNeeded" ValidatesOnExceptions="true" Mode="TwoWay" ValidatesOnDataErrors="True" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <local:DemoValidator/>
                                    </Binding.ValidationRules>
                                </Binding>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Button.IsEnabled" Value="true"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                                <Setter Property="Button.IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </StackPanel>
                    </Grid>
                </Grid>
                <Grid Grid.Column="{DynamicResource inputColnm}" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <StackPanel >
                        <Image x:Name="image" Height="157" Source="{Binding Path= ImageSource,Mode=TwoWay,Converter={StaticResource stringToImageSourceConverter }}" DragEnter="imagehere" Drop="imageDropHere">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Button.IsEnabled" Value="true"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                            <Setter Property="Button.IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                        <Button x:Name="loadButton" HorizontalAlignment="Center" Content="load image or drag from folder" Click="loadButton_Click" BorderBrush="Transparent" Foreground="White" FontStyle="Italic" FontFamily="Sitka Small">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Button.IsEnabled" Value="true"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                            <Setter Property="Button.IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Button.Background>
                                <ImageBrush ImageSource="images/loadImageButton.png"/>
                            </Button.Background>
                        </Button>
                    </StackPanel>
                    <wpfTool:RichTextBox x:Name="summaryTextBox2" Text="{Binding CompanySummary, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="1">
                        <wpfTool:RichTextBox.Style>
                            <Style TargetType="{x:Type wpfTool:RichTextBox}">
                                <Setter Property="Button.IsEnabled" Value="true"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                        <Setter Property="Button.IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </wpfTool:RichTextBox.Style>
                    </wpfTool:RichTextBox>
                    <Button x:Name="button" Content="Export to PDF" Background="{DynamicResource radioBootonHeaderColor}" Click="button_Click" Margin="0,170,0,-19" Grid.Row="1">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="IsEnabled" Value="false"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=addbutton}" Value="True">
                                        <Setter Property="IsEnabled" Value="true"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsEnabled, ElementName=updatebutton}" Value="True">
                                        <Setter Property="IsEnabled" Value="true"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </Grid>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
