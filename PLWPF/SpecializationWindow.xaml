<Window x:Class="PLWPF.SpecializationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PLWPF"
        mc:Ignorable="d"
        Title="Specialization" Height="300" Width="300" WindowStartupLocation="CenterScreen"  Icon="images/icon.png">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="39*"/>
            <RowDefinition Height="183*"/>
            <RowDefinition Height="47*"/>
        </Grid.RowDefinitions>
        <Grid Background="{DynamicResource radioBootonHeaderColor}" Name="topButtons">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <RadioButton x:Name="addRadioButton" Content="{DynamicResource addString}" Grid.Column="{DynamicResource addColnm}" VerticalAlignment="Center" HorizontalAlignment="Center" Checked="addRadioButton_Checked" IsChecked="True" />
            <RadioButton x:Name="updateRadioButton" Content="{DynamicResource updateString}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Checked="updateRadioButton_Checked" />
            <RadioButton x:Name="removeRadioButton" Content="{DynamicResource removeString}" Grid.Column="{DynamicResource removeColnm}" VerticalAlignment="Center" HorizontalAlignment="Center" Checked="removeRadioButton_Checked"/>
        </Grid>
        <Grid Grid.Row="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="addbutton" Grid.Column="{DynamicResource addColnm}" Content="{DynamicResource addString}" Click="addbutton_Click" Background="{DynamicResource radioBootonHeaderColor}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Button.IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=wageMinTextBox}" Value="false"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=wageMaxTextBox}" Value="false"/>
                                    <Condition Binding="{Binding IsChecked, ElementName=addRadioButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="true"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, ElementName=nameTextBox}" Value="">
                                <Setter Property="Button.IsEnabled" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="updatebutton" Grid.Column="1" Content="{DynamicResource updateString}" Click="updatebutton_Click" Background="{DynamicResource radioBootonHeaderColor}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Button.IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=wageMinTextBox}" Value="false"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=wageMaxTextBox}" Value="false"/>
                                    <Condition Binding="{Binding IsChecked, ElementName=updateRadioButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="true"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Path=Text, ElementName=nameTextBox}" Value="">
                                <Setter Property="Button.IsEnabled" Value="false"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="removebutton" Grid.Column="{DynamicResource removeColnm}" Content="{DynamicResource removeString}" Click="removebutton_Click" Background="{DynamicResource radioBootonHeaderColor}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Button.IsEnabled" Value="false"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                <Setter Property="Button.IsEnabled" Value="true"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </Grid >
        <StackPanel x:Name="list"  Grid.Row="1" Background="{DynamicResource categoryBackground}">
            <ComboBox x:Name="comboBox"  IsSynchronizedWithCurrentItem="True" SelectionChanged="comboBox_SelectionChanged" MouseEnter="specialList">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=updateRadioButton}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <Grid Height="160" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="{DynamicResource inputColnm}" x:Name="input">
                    <Label x:Name="numberlabel5" Content="{Binding numOfSpecialization, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Height="26">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}">
                                <Setter Property="Button.IsEnabled" Value="true"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                        <Setter Property="Button.IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=addRadioButton}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <TextBox x:Name="nameTextBox" Height="26" TextWrapping="Wrap" Text="{Binding SpecializationName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Button.IsEnabled" Value="true"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                        <Setter Property="Button.IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <ComboBox x:Name="fieldComboBox" Height="26" SelectedItem="{Binding field1,Mode=TwoWay}" IsSynchronizedWithCurrentItem="True">
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}">
                                <Setter Property="Button.IsEnabled" Value="true"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked,Mode=TwoWay, ElementName=removeRadioButton}" Value="True">
                                        <Setter Property="Button.IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                    <TextBox x:Name="wageMinTextBox" Height="26" TextWrapping="Wrap" Validation.Error="TextBox_Error">
                        <Binding Path="wageMin" Mode="TwoWay" ValidatesOnExceptions="true" ValidatesOnDataErrors="True" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:DemoValidator/>
                            </Binding.ValidationRules>
                        </Binding>
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Button.IsEnabled" Value="true"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=removeRadioButton}" Value="True">
                                        <Setter Property="Button.IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <TextBox x:Name="wageMaxTextBox" Height="26" TextWrapping="Wrap" Validation.Error="TextBox_Error">
                        <Binding Path="wageMax" Mode="TwoWay" ValidatesOnExceptions="true" ValidatesOnDataErrors="True" NotifyOnValidationError="True" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <local:DemoValidator/>
                            </Binding.ValidationRules>
                        </Binding>
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Button.IsEnabled" Value="true"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked,Mode=TwoWay, ElementName=removeRadioButton}" Value="True">
                                        <Setter Property="Button.IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </StackPanel>
                <StackPanel Grid.Column="{DynamicResource labelColnm}" >
                    <Label x:Name="specializationNumber" Content="{DynamicResource specializationIDString}">
                        <Label.Style>
                            <Style TargetType="{x:Type Label}" BasedOn="{StaticResource LabelAlinment}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, ElementName=addRadioButton}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Label x:Name="specializationName" Content="{DynamicResource specializationNameString}" Style="{StaticResource LabelAlinment}"/>
                    <Label x:Name="field1" Content="{DynamicResource specializationFieldString}" Style="{StaticResource LabelAlinment}"/>
                    <Label x:Name="wageMin" Content="{DynamicResource minWageString}" Style="{StaticResource LabelAlinment}"/>
                    <Label x:Name="wageMax" Content="{DynamicResource maxWageString}" Style="{StaticResource LabelAlinment}"/>
                </StackPanel>
            </Grid>
        </StackPanel>

    </Grid>
</Window>
